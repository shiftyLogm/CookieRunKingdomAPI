// <auto-generated />
using System;
using System.Collections.Generic;
using CookieRunKingdomAPI.Data.Contexts;
using CookieRunKingdomAPI.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CookieRunKingdomAPI.Migrations
{
    [DbContext(typeof(CookieContext))]
    partial class CookieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "cookie_element", new[] { "Darkness", "Earth", "Electricity", "Fire", "Ice", "Light", "Poison", "Steel", "Unknown", "Water", "Wind" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "cookie_position", new[] { "Front", "Middle", "Rear" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "cookie_rarity", new[] { "Ancient", "Beast", "Commom", "Dragon", "Epic", "Legendary", "Rare", "Special", "SuperEpic" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "cookie_type", new[] { "Ambush", "Bomber", "Charge", "Defence", "Healing", "Magic", "Ranged", "Support" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CookieRunKingdomAPI.Models.Cookie", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<List<CookieElements>>("element")
                        .IsRequired()
                        .HasColumnType("cookie_element[]");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.PrimitiveCollection<List<CookiePositions>>("position")
                        .IsRequired()
                        .HasColumnType("cookie_position[]");

                    b.Property<CookieRarities>("rarity")
                        .HasColumnType("cookie_rarity");

                    b.Property<CookieTypes>("type")
                        .HasColumnType("cookie_type");

                    b.HasKey("id");

                    b.ToTable("cookie", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
